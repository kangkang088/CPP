#include <string>

int main()
{
	int a = 10;
	int& b = a; // b是a的左值引用

	int&& c = 20; // c是整数字面量20的右值引用（但这种情况不常见，通常用于函数参数或返回值）
	std::string&& d = foo(); // d是foo()返回的临时字符串的右值引用
}

static std::string foo()
{
	return std::string("Hello, World!"); // 返回的临时字符串是一个右值
}

/*左值引用（T& ）是C++98就有的特性，用于为已存在的对象创建别名。
右值引用（T && ）是C++11新增的特性，用于为右值（即临时对象）创建引用，支持移动语义和完美转发等高级特性。
右值引用的主要用途不是直接绑定到字面量或简单的右值表达式上，而是在函数参数和返回值中，以实现更高效的资源管理和更灵活的代码编写方式。*/